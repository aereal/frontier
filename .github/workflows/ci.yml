name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3
      - name: lint
        uses: reviewdog/action-golangci-lint@v2.3.6
        with:
          golangci_lint_flags: '--config=.golangci.yml'
  test:
    strategy:
      matrix:
        go_version:
          - '1.19.x'
          - '1.20.x'
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: actions/setup-go@v4.0.0
        with:
          go-version: ${{ matrix.go_version }}
          cache: true
      - run: go mod download
      - name: test
        run: go test -v -race -coverprofile=cover.out ./...
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage
          path: ./cover.out
          if-no-files-found: error
  report-coverage:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      pull-requests: write
    needs:
      - test
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: actions/download-artifact@v3.0.2
        with:
          name: coverage
      - uses: k1LoW/octocov-action@v0.48.0
  determine_release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      will_release: ${{ steps.determine_release.outputs.new_release_published }}
    steps:
      - uses: actions/checkout@v3
      - id: determine_release
        uses: cycjimmy/semantic-release-action@v3.4.2
        with:
          dry_run: true
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - determine_release
    if: ${{ needs.determine_release.outputs.will_release }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: cycjimmy/semantic-release-action@v3.4.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20.x'
          cache: true
      - uses: goreleaser/goreleaser-action@v4.6.0
        with:
          version: v1.16.2
          args: release
        env:
          GITHUB_TOKEN: ${{ github.token }}
